/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.8
 * Generated at: 2017-02-08 07:04:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class welcome_002dcontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("/*---------------------------------*/\n");
      out.write("* {\n");
      out.write("\tbox-sizing: border-box;\n");
      out.write("\tfont-family: sans-serif;\n");
      out.write("\tmargin: 0;\n");
      out.write("\tpadding: 0;\n");
      out.write("\ttransition: all 1s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("\tbackground: #f5f5f5;\n");
      out.write("\tcolor: #333;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#welcome {\n");
      out.write("\tcolor: #333;\n");
      out.write("\ttext-shadow: 0 1px 3px white, -10px 0 8px #5bc0de;\n");
      out.write("\tdisplay: flex;\n");
      out.write("\theight: 100%;\n");
      out.write("\tmin-height: 100vh;\n");
      out.write("\tmin-width: 100vw;\n");
      out.write("\toverflow: hidden;\n");
      out.write("\tposition: fixed;\n");
      out.write("\twidth: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#welcome div:hover {\n");
      out.write("\ttext-shadow: 0 0 1px white, 0 0 0 #5bc0de;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#welcome div {\n");
      out.write("\talign-items: center;\n");
      out.write("\tbackground: #f5f5f5;\n");
      out.write("\tbox-shadow: 0 0 100px #5bc0de;\n");
      out.write("\tcursor: pointer;\n");
      out.write("\tdisplay: flex;\n");
      out.write("\tfont-size: 5em;\n");
      out.write("\tfont-weight: bold;\n");
      out.write("\twidth: 50%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#left {\n");
      out.write("\tjustify-content: flex-end;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#right {\n");
      out.write("\tjustify-content: flex-start !important;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".Of {\n");
      out.write("\tjustify-content: flex-end;\n");
      out.write("\twidth: 0 !important;\n");
      out.write("\tvisibility: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#Of {\n");
      out.write("\twidth: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".On {\n");
      out.write("\twidth: 100% !important;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*--------------------------------*/\n");
      out.write("#lorem {\n");
      out.write("\talign-items: center;\n");
      out.write("\tdisplay: flex;\n");
      out.write("\tflex-flow: row wrap;\n");
      out.write("\theight: 100vh;\n");
      out.write("\tjustify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#lorem p {\n");
      out.write("\tbackground: #fff;\n");
      out.write("\tbox-shadow: 0 15px 18px -10px #5bc0de;\n");
      out.write("\tfont-size: 1.1em;\n");
      out.write("\tmargin: 1em;\n");
      out.write("\tpadding: 1.5em;\n");
      out.write("\twidth: 25em;\n");
      out.write("\theight: 15em;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<section id='welcome'>\n");
      out.write("\t<div id='left'>!PS VEC</div>\n");
      out.write("\t<span id='Of'></span>\n");
      out.write("\t<div id='right'>TORS!</div>\n");
      out.write("</section>\n");
      out.write("<div id='lorem'>\n");
      out.write("\n");
      out.write("\t<p>\n");
      out.write("\t\t<strong>Signature Verification & Recognition</strong> Recognizing the\n");
      out.write("\t\tlong-standing dominance of signatures across your financial\n");
      out.write("\t\tinstitution for authenticating checks or transaction documents,\n");
      out.write("\t\tProgressSoft utilizes superior technology to provide you with\n");
      out.write("\t\thigh-performing systems and an intelligent approach to the conduct of\n");
      out.write("\t\taccurate signature verification.\n");
      out.write("\t</p>\n");
      out.write("\n");
      out.write("\t<p>\n");
      out.write("\t\t<strong>Electronic Bill Presentment and Payment</strong>\n");
      out.write("\t\tProgressSoft's Electronic Bill Presentment and Payment (PS-EBPP) is an\n");
      out.write("\t\telectronic channel for distributing bills and collecting payments\n");
      out.write("\t\tonline. It marks an evolutionary logical extension of communication\n");
      out.write("\t\tthat enhances and reinforces the billerâs relationship with the\n");
      out.write("\t\tcustomer.\n");
      out.write("\t</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<p>\n");
      out.write("\t\t<strong>Electronic Check Clearing</strong> Technology-driven upgrades\n");
      out.write("\t\tof check capture, presentment and clearing routines are becoming of a\n");
      out.write("\t\tvital importance to your banking practices to ensure a competitive\n");
      out.write("\t\tedge, superior service and compliance with recent financial visions\n");
      out.write("\t\tand legislation.\n");
      out.write("\t</p>\n");
      out.write("\n");
      out.write("\t<p>\n");
      out.write("\t\t<strong>Real-Time Gross Settlement </strong> PS-RTGS is the Real-Time\n");
      out.write("\t\tGross Settlement Solution that empowers central banks with the means\n");
      out.write("\t\tto control large value payments in a guaranteed, irrevokable\n");
      out.write("\t\tenvironment.\n");
      out.write("\t</p>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\tvar divs = document.getElementById('welcome');\n");
      out.write("\tdivs = divs.getElementsByTagName('div');\n");
      out.write("\n");
      out.write("\tfor (var i = 0; i < divs.length; i++) {\n");
      out.write("\t\tdivs[i].onclick = splitScreen;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction splitScreen() {\n");
      out.write("\t\tdocument.getElementById('welcome').style.visibility = 'hidden';\n");
      out.write("\t\tvar split = document.getElementById('Of');\n");
      out.write("\t\tif (true) {\n");
      out.write("\t\t\tsplit.className = 'On';\n");
      out.write("\t\t\tdivs[0].className = 'Of';\n");
      out.write("\t\t\tdivs[1].className = 'Of';\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
